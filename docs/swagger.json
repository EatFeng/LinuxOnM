{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for LinuxOnM.",
        "title": "LinuxOnM API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "support@yourwebapp.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8848",
    "basePath": "/api/handler",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "用户登录",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "安全入口 base64 加密串",
                        "name": "EntranceCode",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UserLoginInfo"
                        }
                    }
                }
            }
        },
        "/dashboard/base/os": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取服务器基础数据",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Load os info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.OsInfo"
                        }
                    }
                }
            }
        },
        "/dashboard/current/:ioOption/:netOption": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取首页实时数据",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Dashboard"
                ],
                "summary": "Load dashboard current info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "request",
                        "name": "ioOption",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "request",
                        "name": "netOption",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DashboardCurrent"
                        }
                    }
                }
            }
        },
        "/file/read": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "按行读取日志文件",
                "tags": [
                    "File"
                ],
                "summary": "Read file by Line",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.FileReadByLineReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/group": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function serves the purpose of creating a new system group. It first validates and binds the incoming JSON request data of type dto.GroupCreate.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "Create group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroupCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "type"
                    ],
                    "formatEN": "create group [name][type]",
                    "formatZH": "创建组 [name][type]",
                    "paramKeys": []
                }
            }
        },
        "/group/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is used to query and retrieve a list of system groups. It first validates and binds the incoming JSON request data of type dto.GroupSearch.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "List groups",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroupSearch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GroupInfo"
                            }
                        }
                    }
                }
            }
        },
        "/groups/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is specifically designed to handle the deletion of system groups. It commences by validating and binding the incoming JSON request data of type dto.OperateByID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "Delete group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.OperateByID"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "groups",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "name",
                            "output_value": "name"
                        },
                        {
                            "db": "groups",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "type",
                            "output_value": "type"
                        }
                    ],
                    "bodyKeys": [
                        "id"
                    ],
                    "formatEN": "delete group [type][name]",
                    "formatZH": "删除组 [type][name]",
                    "paramKeys": []
                }
            }
        },
        "/groups/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is responsible for handling the update operation of system groups. It first validates and binds the incoming JSON request data of type dto.GroupUpdate.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "System Group"
                ],
                "summary": "Update group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GroupUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "type"
                    ],
                    "formatEN": "update group [name][type]",
                    "formatZH": "更新组 [name][type]",
                    "paramKeys": []
                }
            }
        },
        "/host": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is used to create or update a host. It first validates and binds the incoming JSON request data of type dto.HostOperate.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Create host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HostOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "addr"
                    ],
                    "formatEN": "create host [name][addr]",
                    "formatZH": "创建主机 [name][addr]",
                    "paramKeys": []
                }
            }
        },
        "/host/command": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is used to retrieve the list of quick commands. It calls the commandService.List function which is responsible for querying and fetching the relevant command data from the underlying data source, such as a database. If the query operation in the commandService.List function is successful, it returns the list of commands which is then sent back as a successful response with a status code of 200 and the data in the format of dto.CommandInfo. In case of any errors during the query process, such as database connection issues or errors in data retrieval, the helper.ErrorWithDetail function is called to send back an error response with a specific error code (constant.CodeErrInternalServer) and error type (constant.ErrTypeInternalServer), along with the detailed error message.",
                "tags": [
                    "Command"
                ],
                "summary": "List commands",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CommandInfo"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is designed to create a new quick command. It first validates and binds the incoming JSON request data of type dto.CommandOperate. The dto.CommandOperate structure likely contains essential fields for creating a command, such as the name and the actual command text. After successful validation and binding, it calls the commandService.Create function, passing the validated request data (req) as an argument. The commandService.Create function is tasked with performing the actual creation operations in the underlying data source, which may involve inserting the new command record with the provided details and handling any associated business logic or data integrity checks. If the creation process is successful, a success response with no additional data is returned. In case of any errors during the validation and binding of the request data or during the actual creation process in the commandService.Create function, the helper.ErrorWithDetail function is called to send back an error response with the appropriate error code and type, along with the detailed error message.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Create command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CommandOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "command"
                    ],
                    "formatEN": "create quick command [name][command]",
                    "formatZH": "创建快捷命令 [name][command]",
                    "paramKeys": []
                }
            }
        },
        "/host/command/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is specifically designed to handle the deletion of quick commands. It first initiates by validating and binding the incoming JSON request data of type dto.BatchDeleteReq.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Command"
                ],
                "summary": "Delete command",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "commands",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "name",
                            "output_value": "names"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete quick command [names]",
                    "formatZH": "删除快捷命令 [names]",
                    "paramKeys": []
                }
            }
        },
        "/host/del": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is designed to handle the deletion of hosts. It operates in a way that first validates and binds the incoming JSON request data of type dto.BatchDeleteReq.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Delete host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.BatchDeleteReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "hosts",
                            "input_column": "id",
                            "input_value": "ids",
                            "isList": true,
                            "output_column": "addr",
                            "output_value": "addrs"
                        }
                    ],
                    "bodyKeys": [
                        "ids"
                    ],
                    "formatEN": "delete host [addrs]",
                    "formatZH": "删除主机 [addrs]",
                    "paramKeys": []
                }
            }
        },
        "/host/search": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is used to retrieve a paginated list of hosts. It first validates and binds the incoming JSON request data of type dto.SearchHostWithPage.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Page host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchHostWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.HostTree"
                            }
                        }
                    }
                }
            }
        },
        "/host/test/byid/:id": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "测试主机连接",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Test host conn by host id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "request",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "/host/test/byinfo": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is used to test the SSH connection to a host based on the connection information provided in the request body.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Test host connection by provided connection information",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HostConnTest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns true if the SSH connection to the host is successfully established, false otherwise."
                    }
                }
            }
        },
        "/host/tree": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is used to load the host information in a tree-like structure. It first validates and binds the incoming JSON request data of type dto.SearchForTree.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Load host tree",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchForTree"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.HostTree"
                            }
                        }
                    }
                }
            }
        },
        "/host/update": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is used to update host information. It first validates and binds the incoming JSON request data of type dto.HostOperate.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Update host",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HostOperate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [],
                    "bodyKeys": [
                        "name",
                        "addr"
                    ],
                    "formatEN": "update host [name][addr]",
                    "formatZH": "更新主机信息 [name][addr]",
                    "paramKeys": []
                }
            }
        },
        "/host/update/group": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "This function is designed to handle the operation of changing the group to which a host belongs, which is often referred to as \"switching the host's group\".",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Host"
                ],
                "summary": "Update host group",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ChangeHostGroup"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                },
                "x-panel-log": {
                    "BeforeFunctions": [
                        {
                            "db": "hosts",
                            "input_column": "id",
                            "input_value": "id",
                            "isList": false,
                            "output_column": "addr",
                            "output_value": "addr"
                        }
                    ],
                    "bodyKeys": [
                        "id",
                        "group"
                    ],
                    "formatEN": "change host [addr] group =\u003e [group]",
                    "formatZH": "切换主机[addr]分组 =\u003e [group]",
                    "paramKeys": []
                }
            }
        },
        "/log/operation": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取系统操作日志列表分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Page operation logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchOpLogWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        },
        "/log/ssh": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取 SSH 登录日志",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "SSH"
                ],
                "summary": "Load host SSH logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchSSHLog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.SSHLog"
                        }
                    }
                }
            }
        },
        "/log/system/files": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取系统日志文件列表",
                "tags": [
                    "Logs"
                ],
                "summary": "Load system log files",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/logs/login": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "获取系统登录日志列表分页",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Page login logs",
                "parameters": [
                    {
                        "description": "request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.SearchLoginLogWithPage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PageResult"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.BatchDeleteReq": {
            "type": "object",
            "required": [
                "ids"
            ],
            "properties": {
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "dto.ChangeHostGroup": {
            "type": "object",
            "required": [
                "group_id",
                "id"
            ],
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.CommandInfo": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "groupBelong": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CommandOperate": {
            "type": "object",
            "required": [
                "command",
                "name"
            ],
            "properties": {
                "command": {
                    "type": "string"
                },
                "groupBelong": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.DashboardCurrent": {
            "type": "object",
            "properties": {
                "cpuPercent": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "cpuTotal": {
                    "type": "integer"
                },
                "cpuUsed": {
                    "type": "number"
                },
                "cpuUsedPercent": {
                    "type": "number"
                },
                "diskData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.DiskInfo"
                    }
                },
                "gpuData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.GPUInfo"
                    }
                },
                "ioCount": {
                    "type": "integer"
                },
                "ioReadBytes": {
                    "type": "integer"
                },
                "ioReadTime": {
                    "type": "integer"
                },
                "ioWriteBytes": {
                    "type": "integer"
                },
                "ioWriteTime": {
                    "type": "integer"
                },
                "load1": {
                    "type": "number"
                },
                "load15": {
                    "type": "number"
                },
                "load5": {
                    "type": "number"
                },
                "loadUsagePercent": {
                    "type": "number"
                },
                "memoryAvailable": {
                    "type": "integer"
                },
                "memoryTotal": {
                    "type": "integer"
                },
                "memoryUsed": {
                    "type": "integer"
                },
                "memoryUsedPercent": {
                    "type": "number"
                },
                "netBytesRecv": {
                    "type": "integer"
                },
                "netBytesSent": {
                    "type": "integer"
                },
                "procs": {
                    "type": "integer"
                },
                "shotTime": {
                    "type": "string"
                },
                "swapMemoryAvailable": {
                    "type": "integer"
                },
                "swapMemoryTotal": {
                    "type": "integer"
                },
                "swapMemoryUsed": {
                    "type": "integer"
                },
                "swapMemoryUsedPercent": {
                    "type": "number"
                },
                "timeSinceUptime": {
                    "type": "string"
                },
                "uptime": {
                    "type": "integer"
                }
            }
        },
        "dto.DiskInfo": {
            "type": "object",
            "properties": {
                "device": {
                    "type": "string"
                },
                "free": {
                    "type": "integer"
                },
                "inodesFree": {
                    "type": "integer"
                },
                "inodesTotal": {
                    "type": "integer"
                },
                "inodesUsed": {
                    "type": "integer"
                },
                "inodesUsedPercent": {
                    "type": "number"
                },
                "path": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "used": {
                    "type": "integer"
                },
                "usedPercent": {
                    "type": "number"
                }
            }
        },
        "dto.GPUInfo": {
            "type": "object",
            "properties": {
                "fanSpeed": {
                    "type": "string"
                },
                "gpuUtil": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "maxPowerLimit": {
                    "type": "string"
                },
                "memTotal": {
                    "type": "string"
                },
                "memUsed": {
                    "type": "string"
                },
                "memoryUsage": {
                    "type": "string"
                },
                "performanceState": {
                    "type": "string"
                },
                "powerDraw": {
                    "type": "string"
                },
                "powerUsage": {
                    "type": "string"
                },
                "productName": {
                    "type": "string"
                },
                "temperature": {
                    "type": "string"
                }
            }
        },
        "dto.GroupCreate": {
            "type": "object",
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.GroupInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.GroupSearch": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.GroupUpdate": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "isDefault": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.HostConnTest": {
            "type": "object",
            "required": [
                "addr",
                "port",
                "user"
            ],
            "properties": {
                "addr": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string",
                    "enum": [
                        "password",
                        "key"
                    ]
                },
                "passPhrase": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "privateKey": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.HostOperate": {
            "type": "object",
            "required": [
                "addr",
                "port",
                "user"
            ],
            "properties": {
                "addr": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string",
                    "enum": [
                        "password",
                        "key"
                    ]
                },
                "description": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "passPhrase": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "integer",
                    "maximum": 65535,
                    "minimum": 1
                },
                "privateKey": {
                    "type": "string"
                },
                "rememberPassword": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.HostTree": {
            "type": "object",
            "properties": {
                "children": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TreeChild"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "dto.Login": {
            "type": "object",
            "properties": {
                "authMethod": {
                    "type": "string"
                },
                "captcha": {
                    "type": "string"
                },
                "captchaID": {
                    "type": "string"
                },
                "ignore_capycha": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "dto.OperateByID": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "dto.OsInfo": {
            "type": "object",
            "properties": {
                "diskSize": {
                    "type": "integer"
                },
                "kernelArch": {
                    "type": "string"
                },
                "kernelVersion": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "platformFamily": {
                    "type": "string"
                }
            }
        },
        "dto.PageResult": {
            "type": "object",
            "properties": {
                "items": {},
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.SSHHistory": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "area": {
                    "type": "string"
                },
                "authMode": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "dateStr": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "dto.SSHLog": {
            "type": "object",
            "properties": {
                "failedCount": {
                    "type": "integer"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SSHHistory"
                    }
                },
                "successfulCount": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "dto.SearchForTree": {
            "type": "object",
            "properties": {
                "info": {
                    "type": "string"
                }
            }
        },
        "dto.SearchHostWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.SearchLoginLogWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "ip": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.SearchOpLogWithPage": {
            "type": "object",
            "required": [
                "page",
                "pageSize"
            ],
            "properties": {
                "operation": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.SearchSSHLog": {
            "type": "object",
            "required": [
                "Status",
                "page",
                "pageSize"
            ],
            "properties": {
                "Status": {
                    "type": "string",
                    "enum": [
                        "Success",
                        "Failed",
                        "All"
                    ]
                },
                "info": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                }
            }
        },
        "dto.TreeChild": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                }
            }
        },
        "dto.UserLoginInfo": {
            "type": "object",
            "properties": {
                "mfaStatus": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "request.FileReadByLineReq": {
            "type": "object",
            "required": [
                "page",
                "pageSize",
                "type"
            ],
            "properties": {
                "ID": {
                    "type": "integer"
                },
                "latest": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}